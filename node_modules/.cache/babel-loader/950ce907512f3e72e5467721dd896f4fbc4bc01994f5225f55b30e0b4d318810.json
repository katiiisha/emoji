{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Desktop/avenu/emoji/project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Filter from './componets/Filter';\nimport Cards from './componets/Cards';\nimport Paginate from './componets/Paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // получаем данные с сервера и записываем их в хук\n  const [data, setData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  // общее количество страниц\n  const [cardsPerPage] = useState(12);\n  //текущая страница\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // получаем данные с сервера\n  const url = 'https://63f4e22355677ef68bc5fb32.mockapi.io/emoji';\n  useEffect(() => {\n    axios.get(url).then(response => {\n      setData(response.data);\n    });\n  }, []);\n  // поиск эмоджи\n  const filteredEmoji = data.filter(elem => {\n    const fullSearch = searchValue.split(\" \");\n    return fullSearch.every(word => elem.title.toLowerCase().includes(word.toLowerCase()));\n  });\n\n  // определение индекса первой и последней карточки \n  const lastCardIndex = currentPage * cardsPerPage;\n  const firstCardIndex = lastCardIndex - cardsPerPage;\n  // получили первые 12 карточек из полученного с сервера массива \n  const currentCards = Math.ceil(data.length / cardsPerPage);\n  const emojiList = filteredEmoji.slice(firstCardIndex, lastCardIndex);\n\n  // заполнение массива количеством страниц\n  let startPage = 0;\n  let endPage = 0;\n  const pageNumbers = [];\n  for (let i = 1; i <= currentCards; i++) {\n    pageNumbers.push(i);\n  }\n  if (currentPage === 1 || currentPage === 2) {\n    startPage = 0;\n    endPage = 5;\n  } else if (currentPage === currentCards || currentPage === currentCards - 1 || currentPage === currentCards - 2) {\n    startPage = currentCards - 5;\n    endPage = currentCards;\n  } else if (currentPage > 2) {\n    startPage = currentPage - 3;\n    endPage = currentPage + 2;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      setCurrentPage: setCurrentPage,\n      setSearchValue: setSearchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      emojiList: emojiList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      pageNumbers: pageNumbers,\n      startPage: startPage,\n      endPage: endPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"jrynq9lAUu25vjZiWAbDMftYrk0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Filter","Cards","Paginate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","searchValue","setSearchValue","cardsPerPage","currentPage","setCurrentPage","url","get","then","response","filteredEmoji","filter","elem","fullSearch","split","every","word","title","toLowerCase","includes","lastCardIndex","firstCardIndex","currentCards","Math","ceil","length","emojiList","slice","startPage","endPage","pageNumbers","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ekaterina/Desktop/avenu/emoji/project/src/App.js"],"sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport Filter from './componets/Filter';\nimport Cards from './componets/Cards';\nimport Paginate from './componets/Paginate';\n\nfunction App() {\n  // получаем данные с сервера и записываем их в хук\n  const [data, setData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  // общее количество страниц\n  const [cardsPerPage] = useState(12);\n  //текущая страница\n  const [currentPage, setCurrentPage] = useState(1);\n\n// получаем данные с сервера\n  const url = 'https://63f4e22355677ef68bc5fb32.mockapi.io/emoji';\n  useEffect(() => {\n    axios.get(url)\n      .then((response) => {\n        setData(response.data)\n      })\n  }, []);\n// поиск эмоджи\n  const filteredEmoji = data.filter((elem) => {\n    const fullSearch = searchValue.split(\" \");\n    return fullSearch.every(\n      (word) =>\n        elem.title.toLowerCase().includes(word.toLowerCase())\n    );\n  });\n\n  // определение индекса первой и последней карточки \n  const lastCardIndex = currentPage * cardsPerPage;\n  const firstCardIndex = lastCardIndex - cardsPerPage;\n  // получили первые 12 карточек из полученного с сервера массива \n  const currentCards = Math.ceil(data.length / cardsPerPage);\n\n  const emojiList = filteredEmoji.slice(\n    firstCardIndex,\n    lastCardIndex\n  );\n\n// заполнение массива количеством страниц\n  let startPage = 0;\n  let endPage = 0;\n  const pageNumbers = [];\n  for (let i = 1; i <= currentCards; i++) {\n    pageNumbers.push(i);\n  }\n\n  if (currentPage === 1 || currentPage === 2 ) {\n    startPage = 0;\n    endPage = 5;\n  } else if (\n    currentPage === currentCards ||\n    currentPage === currentCards - 1 || currentPage === currentCards - 2\n  ) {\n    startPage = currentCards - 5;\n    endPage = currentCards;\n  } else if (currentPage > 2) {\n    startPage = currentPage - 3;\n    endPage = currentPage + 2;\n  }\n\n\n  \n \n\n \n\n\n  return (\n    <>\n      \n      <Filter setCurrentPage={setCurrentPage} setSearchValue={setSearchValue} />\n    \n      <Cards emojiList={emojiList} />\n      <Paginate currentPage={currentPage} setCurrentPage={setCurrentPage} pageNumbers={pageNumbers} startPage={startPage} endPage={endPage} /> \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}