{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/Desktop/avenu/emoji/project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Filter from './componets/Filter';\nimport Cards from './componets/Cards';\nimport Paginate from './componets/Paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // получаем данные с сервера и записываем их в хук\n  const [data, setData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  // общее количество страниц\n  const [cardsPerPage] = useState(12);\n  //текущая страница\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // получаем данные с сервера\n  const url = 'https://63f4e22355677ef68bc5fb32.mockapi.io/emoji';\n  useEffect(() => {\n    axios.get(url).then(response => {\n      setData(response.data);\n    });\n  }, []);\n  // поиск эмоджи\n  const filteredEmoji = data.filter(elem => {\n    const fullSearch = searchValue.split(\" \");\n    return fullSearch.every(word => elem.title.toLowerCase().includes(word.toLowerCase()));\n  });\n  const emojiList = filteredEmoji.slice(firstCardIndex, lastCardIndex);\n  // определение индекса первой и последней карточки \n  const lastCardIndex = currentPage * cardsPerPage;\n  const firstCardIndex = lastCardIndex - cardsPerPage;\n  // получили первые 12 карточек из полученного с сервера массива \n  const currentCards = Math.ceil(data.length / cardsPerPage);\n  let startPage = 0;\n  let endPage = 0;\n  const pageNumbers = [];\n  for (let i = 1; i <= currentCards; i++) {\n    pageNumbers.push(i);\n  }\n\n  //данные получаенные с инпута \n  const [text, setText] = useState('');\n  const handleNameChange = e => {\n    setText(e.target.value);\n  };\n  // пагинация \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      handleNameChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      data: data,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n      data: data,\n      CurrentPage: CurrentPage,\n      CardsPerPage: CardsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"u2/XIxGdsgArkpZ0vZPou5JL/C0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Filter","Cards","Paginate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","searchValue","setSearchValue","cardsPerPage","currentPage","setCurrentPage","url","get","then","response","filteredEmoji","filter","elem","fullSearch","split","every","word","title","toLowerCase","includes","emojiList","slice","firstCardIndex","lastCardIndex","currentCards","Math","ceil","length","startPage","endPage","pageNumbers","i","push","text","setText","handleNameChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","CurrentPage","CardsPerPage","_c","$RefreshReg$"],"sources":["/Users/ekaterina/Desktop/avenu/emoji/project/src/App.js"],"sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport Filter from './componets/Filter';\nimport Cards from './componets/Cards';\nimport Paginate from './componets/Paginate';\n\nfunction App() {\n  // получаем данные с сервера и записываем их в хук\n  const [data, setData] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  // общее количество страниц\n  const [cardsPerPage] = useState(12);\n  //текущая страница\n  const [currentPage, setCurrentPage] = useState(1);\n\n// получаем данные с сервера\n  const url = 'https://63f4e22355677ef68bc5fb32.mockapi.io/emoji';\n  useEffect(() => {\n    axios.get(url)\n      .then((response) => {\n        setData(response.data)\n      })\n  }, []);\n// поиск эмоджи\n  const filteredEmoji = data.filter((elem) => {\n    const fullSearch = searchValue.split(\" \");\n    return fullSearch.every(\n      (word) =>\n        elem.title.toLowerCase().includes(word.toLowerCase())\n    );\n  });\n  const emojiList = filteredEmoji.slice(\n    firstCardIndex,\n    lastCardIndex\n  );\n// определение индекса первой и последней карточки \n  const lastCardIndex = currentPage * cardsPerPage;\n  const firstCardIndex = lastCardIndex - cardsPerPage;\n  // получили первые 12 карточек из полученного с сервера массива \n  const currentCards = Math.ceil(data.length / cardsPerPage);\n\n  let startPage = 0;\n  let endPage = 0;\n\n  const pageNumbers = [];\n\n  for (let i = 1; i <= currentCards; i++) {\n    pageNumbers.push(i);\n  }\n\n\n\n  \n  //данные получаенные с инпута \n  const [text, setText] = useState('')\n  const handleNameChange = (e) => {\n    setText(e.target.value)\n  }\n // пагинация \n\n \n\n\n  return (\n    <>\n      \n      <Filter handleNameChange={handleNameChange} />\n    \n      <Cards data={data} text={text}  />\n      <Paginate data={data} CurrentPage={CurrentPage} CardsPerPage={CardsPerPage} /> \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}